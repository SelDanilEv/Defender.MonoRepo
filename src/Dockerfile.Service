FROM mcr.microsoft.com/dotnet/aspnet:8.0-alpine AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

FROM mcr.microsoft.com/dotnet/sdk:8.0-alpine AS build
ARG SERVICE_DIR

WORKDIR /app-src

COPY Directory.Build.* ./
COPY Directory.Packages.* ./

# Copy projects explicitly
COPY $SERVICE_DIR/src/WebApi/WebApi.csproj ./service/src/WebApi/
COPY $SERVICE_DIR/src/Application/Application.csproj ./service/src/Application/
COPY $SERVICE_DIR/src/Domain/Domain.csproj ./service/src/Domain/
COPY $SERVICE_DIR/src/Infrastructure/Infrastructure.csproj ./service/src/Infrastructure/

# Copy dependencies explicitly
COPY Defender.Common/src/Defender.Common ./Defender.Common/src/Defender.Common
COPY Defender.DistributedCache/src/Defender.DistributedCache ./Defender.DistributedCache/src/Defender.DistributedCache
COPY Defender.Kafka/src/Defender.Kafka ./Defender.Kafka/src/Defender.Kafka

RUN echo "Restoring project..." && \
    dotnet restore "service/src/WebApi/WebApi.csproj"

COPY $SERVICE_DIR/src ./service/src

RUN echo "After copying service source:" && \
    echo "Service directory contents:" && ls -la ./service/src/ && \
    echo "WebApi directory contents:" && ls -la ./service/src/WebApi/

WORKDIR /app-src/service/src/WebApi
RUN echo "Current directory: $(pwd)" && \
    echo "Directory contents:" && ls -la && \
    echo "Building project..." && \
    dotnet build "WebApi.csproj" -c Release -o /app/build

FROM build AS publish
WORKDIR /app-src/service/src/WebApi
RUN dotnet publish "WebApi.csproj" -c Release -o /app/publish

# ⬇️ DEBUG: Explicitly list all files in publish folder to confirm
RUN echo "Checking publish output:" && ls -Rla /app/publish

FROM base AS final
ARG SERVICE_DIR
ENV SERVICE_DIR=${SERVICE_DIR}
WORKDIR /app
COPY --from=publish /app/publish ./

# ⬇️ DEBUG: List final app directory to confirm DLL is copied correctly
RUN echo "Final image contents:" && ls -Rla /app

ENTRYPOINT ["sh","-c","dotnet ${SERVICE_DIR}.WebApi.dll"]